exclude :test_attrset, "undefined symbol: rb_is_attrset_id"
exclude :test_check_id_invalid_type, "Expected Exception(TypeError) was raised, but the message doesn't match. Expected /X\\u{1F431}/ to match \"TruffleRuby doesn't have a case for the org.truffleruby.cext.SymbolToIDNodeGen node with values of type Class(org.truffleruby.core.klass.RubyClass)\\n\" + \"\\tfrom org.truffleruby.cext.SymbolToIDNodeGen.executeAndSpecialize(SymbolToIDNodeGen.java:180)\\n\" + \"\\tfrom org.truffleruby.cext.SymbolToIDNodeGen.execute(SymbolToIDNodeGen.java:101)\\n\" + \"\\tfrom org.truffleruby.cext.ValueWrapperManager$Symbol2IDFunction.execute(ValueWrapperManager.java:423)\\n\" + \"\\tfrom org.truffleruby.cext.Symbol2IDFunctionGen$InteropLibraryExports$Cached.executeAndSpecialize(Symbol2IDFunctionGen.java:150)\\n\" + \"\\tfrom org.truffleruby.cext.Symbol2IDFunctionGen$InteropLibraryExports$Cached.execute(Symbol2IDFunctionGen.java:136)\\n\" + \"\\tfrom com.oracle.truffle.llvm.runtime.nodes.func.LLVMDispatchNode$LLVMLookupDispatchForeignNode.doGeneric(LLVMDispatchNode.java:459)\\n\" + \"\\tfrom com.oracle.truffle.llvm.runtime.nodes.func.LLVMDispatchNode$LLVMLookupDispatchForeignNode.doUnknownType(LLVMDispatchNode.java:487)\\n\" + \"\\tfrom com.oracle.truffle.llvm.runtime.nodes.func.LLVMDispatchNodeGen$LLVMLookupDispatchForeignNodeGen.executeAndSpecialize(LLVMDispatchNodeGen.java:1575)\\n\" + \"\\tfrom com.oracle.truffle.llvm.runtime.nodes.func.LLVMDispatchNodeGen$LLVMLookupDispatchForeignNodeGen.execute(LLVMDispatchNodeGen.java:1398)\\n\" + \"\\tfrom com.oracle.truffle.llvm.runtime.nodes.func.LLVMDispatchNode.doForeignExecutable(LLVMDispatchNode.java:380)\\n\" + \"\\tfrom com.oracle.truffle.llvm.runtime.nodes.func.LLVMDispatchNodeGen.executeAndSpecialize(LLVMDispatchNodeGen.java:722)\\n\" + \"\\tfrom com.oracle.truffle.llvm.runtime.nodes.func.LLVMDispatchNodeGen.executeDispatch(LLVMDispatchNodeGen.java:304)\\n\" + \"\\tfrom com.oracle.truffle.llvm.runtime.nodes.func.LLVMCallNode.doCall(LLVMCallNode.java:86)\\n\" + \"\\tfrom com.oracle.truffle.llvm.runtime.nodes.func.LLVMCallNodeGen.executeAndSpecialize(LLVMCallNodeGen.java:79)\\n\" + \"\\tfrom com.oracle.truffle.llvm.runtime.nodes.func.LLVMCallNodeGen.executeGeneric(LLVMCallNodeGen.java:67)\\n\" + \"\\tfrom com.oracle.truffle.llvm.runtime.nodes.api.LLVMFrameNullerExpression.doGeneric(LLVMFrameNullerExpression.java:68)\\n\" + \"\\tfrom com.oracle.truffle.llvm.runtime.nodes.api.LLVMFrameNullerExpressionNodeGen.executeGeneric(LLVMFrameNullerExpressionNodeGen.java:29)\\n\" + \"\\tfrom com.oracle.truffle.llvm.runtime.nodes.vars.LLVMWriteNodeFactory$LLVMWriteI64NodeGen.execute_generic1(LLVMWriteNodeFactory.java:564)\\n\" + \"\\tfrom com.oracle.truffle.llvm.runtime.nodes.vars.LLVMWriteNodeFactory$LLVMWriteI64NodeGen.execute(LLVMWriteNodeFactory.java:538)\\n\" + \"\\tfrom com.oracle.truffle.llvm.runtime.nodes.base.LLVMBasicBlockNode$InitializedBlockNode.execute(LLVMBasicBlockNode.java:154)\\n\" + \"\\tfrom com.oracle.truffle.llvm.runtime.nodes.control.LLVMDispatchBasicBlockNode.dispatchFromBasicBlock(LLVMDispatchBasicBlockNode.java:117)\\n\" + \"\\tfrom com.oracle.truffle.llvm.runtime.nodes.control.LLVMDispatchBasicBlockNode.doDispatch(LLVMDispatchBasicBlockNode.java:88)\\n\" + \"\\tfrom com.oracle.truffle.llvm.runtime.nodes.control.LLVMDispatchBasicBlockNodeGen.executeGeneric(LLVMDispatchBasicBlockNodeGen.java:32)\\n\" + \"\\tfrom com.oracle.truffle.llvm.runtime.nodes.control.LLVMFunctionRootNode.doRun(LLVMFunctionRootNode.java:81)\\n\" + \"\\tfrom com.oracle.truffle.llvm.runtime.nodes.control.LLVMFunctionRootNodeGen.executeGeneric(LLVMFunctionRootNodeGen.java:33)\\n\" + \"\\tfrom com.oracle.truffle.llvm.runtime.nodes.func.LLVMFunctionStartNode.execute(LLVMFunctionStartNode.java:102)\"."
exclude :test_check_symbol_invalid_type, "undefined symbol: rb_check_symbol"
exclude :test_global, "undefined symbol: rb_is_global_id"
exclude :test_local, "undefined symbol: rb_is_local_id"
