exclude :test_array_to_s, "<#<Encoding:US-ASCII>> expected but was <#<Encoding:UTF-8>>."
exclude :test_encoding_to_s, "<#<Encoding:US-ASCII>> expected but was <#<Encoding:UTF-8>>."
exclude :test_false_to_s, "<#<Encoding:US-ASCII>> expected but was <#<Encoding:UTF-8>>."
exclude :test_greek_capital_gap, "<\"Σ\"> expected but was <\"ΎΎ\">."
exclude :test_hash_to_s, "<#<Encoding:US-ASCII>> expected but was <#<Encoding:UTF-8>>."
exclude :test_nil_inspect, "<#<Encoding:US-ASCII>> expected but was <#<Encoding:UTF-8>>."
exclude :test_nil_to_s, "<#<Encoding:US-ASCII>> expected but was <#<Encoding:UTF-8>>."
exclude :test_nonascii_method_name, "<\"\\x{C2A1}\"> expected but was <\"臓\">."
exclude :test_regexp_ascii, "SyntaxError: (eval):1: cannot eval() a String with binary encoding, with no magic encoding comment and containing a non-US-ASCII character: \\xC2"
exclude :test_regexp_embed, "RegexpError expected but nothing was raised."
exclude :test_scrub_modification_inside_block, "RuntimeError expected but nothing was raised."
exclude :test_scrub_replace_block, "ArgumentError expected but nothing was raised."
exclude :test_scrub_widechar, "ArgumentError: UTF-32 string byte length is not a multiple of 4"
exclude :test_setbyte_range, "Exception raised: <#<RangeError: bignum too big to convert into `long'>>"
exclude :test_sprintf_c, "[ArgumentError] exception expected, not #<RangeError: 194 out of char range>."
exclude :test_sprintf_p, "<#<Encoding:UTF-8>> expected but was <#<Encoding:US-ASCII>>."
exclude :test_sprintf_s, "<#<Encoding:ASCII-8BIT>> expected but was <#<Encoding:US-ASCII>>."
exclude :test_str_aref_substr, "<nil> expected but was <\"\\xA1\\xC2\">."
exclude :test_str_dump, "<\"\\xFE\"> (EUC-JP) expected but was <\"\\xFE\"> (ASCII-8BIT)."
exclude :test_string_inspect_encoding, "<no message> (java.lang.AssertionError) from org.truffleruby.core.string.StringNodes$CharacterPrintablePrimitiveNode.isCharacterPrintable"
exclude :test_true_to_s, "<#<Encoding:US-ASCII>> expected but was <#<Encoding:UTF-8>>."
exclude :test_utf_dummy_are_like_regular_dummy_encodings, "<[0, 0, 254, 255]> expected but was <[0, 65279]>."
exclude :test_valid_encoding, "<true> expected but was <false>."
